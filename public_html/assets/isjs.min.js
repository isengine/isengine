var is={};is.App={};is.Helpers={};is.View={};;is.Helpers.Match=class{static equal(haystack,needle){return String(haystack)===String(needle)?true:null;}static string(haystack,needle){return is.Helpers.Strings.match(haystack,needle);}static numeric(haystack,min=null,max=null){haystack=Number(haystack);min=is.Helpers.System.set(min)?Number(min):false;max=is.Helpers.System.set(max)?Number(max):false;let rmin=min===false?true:haystack>=min;let rmax=max===false?true:haystack<=max;return rmin&&rmax?true:null;}static equalIn(haystack,needle,and=true){let self=is.Helpers.Match;let result;for(let k in haystack){let item=haystack[k];result=self.equal(item,needle);if((and&&!result)||(!and&&result)){break;}}return result;}static stringIn(haystack,needle,and=true){let self=is.Helpers.Match;let result;for(let k in haystack){let item=haystack[k];result=self.string(item,needle);if((and&&!result)||(!and&&result)){break;}}return result;}static numericIn(haystack,min=null,max=null,and=true){let self=is.Helpers.Match;let result;for(let k in haystack){let item=haystack[k];result=self.numeric(item,min,max);if((and&&!result)||(!and&&result)){break;}}return result;}static equalOf(haystack,needle,and=true){let self=is.Helpers.Match;let result;for(let k in needle){let item=needle[k];result=self.equal(haystack,item);if((and&&!result)||(!and&&result)){break;}}return result;}static stringOf(haystack,needle,and=true){let self=is.Helpers.Match;let result;for(let k in needle){let item=needle[k];result=self.string(haystack,item);if((and&&!result)||(!and&&result)){break;}}return result;}static numericOf(haystack,minmax,and=true){let self=is.Helpers.Match;let objects=is.Helpers.Objects;let result;for(let k in minmax){let item=minmax[k];result=self.numeric(haystack,objects.first(item,'value'),objects.last(item,'value'));if((and&&!result)||(!and&&result)){break;}}return result;}static common(name,data){let fname=is.Helpers.Match[name];return fname.call(false,data[0],data[1],data[2],data[3]);}};is.Helpers.Objects=class{static associate(item){let system=is.Helpers.System;let result=null;if(system.typeData(item,'object')){for(let k in item){if(!item.hasOwnProperty(k))continue;if(system.type(k)!=='numeric'){result=true;break;}}}return result;}static numeric(item){let system=is.Helpers.System;let result=true;if(system.typeData(item,'object')){for(let k in item){if(!item.hasOwnProperty(k))continue;if(system.type(item[k])!=='numeric'){result=null;break;}}}return result;}static convert(item){let type=is.Helpers.System.typeData(item);if(type==='string'){item=is.Helpers.Parser.fromString(item);}else if(type==='array'){item={...item};}else if(type==='json'){item=is.Helpers.Parser.fromJson(item);}else if(!type){item={0:item};}return item;}static match(haystack,needle){let self=is.Helpers.Objects;let system=is.Helpers.System;if(system.type(haystack)==='object'){haystack=self.values(haystack);}let result=system.type(needle)==='numeric'?haystack.indexOf(+needle)&&haystack.indexOf(''+needle):haystack.indexOf(needle);return!is.Helpers.System.set(result)||result===-1?null:true;}static find(haystack,needle,position=null){let self=is.Helpers.Objects;let system=is.Helpers.System;let find=self.keys(self.filter(haystack,needle));let pos=system.set(position);if(pos&&position!=='r'){if(position<0){position=self.len(haystack)+position;}return self.match(find,position);}else if(position==='r'){return system.set(self.last(find,'value'),true,null);}else{return system.set(self.first(find,'value'),true,null);}}static get(haystack,index,length=null,position=null){let system=is.Helpers.System;let keys=Object.keys(haystack);let values=Object.values(haystack);let result={};index=+index;if(index<0){index=keys.length+index;}if(length&&!position){length=+length;if(length<0){index+=length+1;length=index+Math.abs(length);}else{length=index+Math.abs(length);}keys=keys.slice(index,length);values=values.slice(index,length);}else if(position){keys=keys.slice(index,keys.length-length);values=values.slice(index,values.length-length);}else{keys=keys.slice(index);values=values.slice(index);}keys.forEach((key,i)=>result[key]=values[i]);return result;}static cut(haystack,index=-1,length=null,position=null){let keys=Object.keys(haystack);let values=Object.values(haystack);let len=keys.length;if(!length){length=position?0:len;}let first=index<0?len+index:index;let last=first+(length<0?length+1:length);if(position){last=len-Math.abs(length);}if(first>last){let point=first+1;first=last;last=point;}if(first<0){first=0;}else if(first>len){first=len;}if(last<0){last=0;}else if(last>len){last=len;}let o1keys=keys.slice(0,first);let o1values=values.slice(0,first);let o2keys=keys.slice(last);let o2values=values.slice(last);let result={};o1keys.forEach((key,i)=>result[key]=o1values[i]);o2keys.forEach((key,i)=>result[key]=o2values[i]);return result;}static add(haystack,needle,recursive=null){haystack=this.convert(haystack);needle=this.convert(needle);if(!this.associate(haystack)&&!this.associate(needle)){haystack=Object.values(haystack);needle=Object.values(needle);let result=reverse?needle.concat(haystack):haystack.concat(needle);return this.convert(result);}return recursive?Object.assign({},needle,haystack):Object.assign({},haystack,needle);}static reverse(item){let type=is.Helpers.System.type(item);item=this.convert(item);let keys=Object.keys(item).reverse();let values=Object.values(item).reverse();let result={};if(type==='array'||!this.associate(item)){result=this.convert(values);}else{keys.forEach((key,i)=>result[key]=values[i]);}return result;}static first(item,result=null){item=this.convert(item);let key=Object.keys(item)[0];let val=result!=='key'?item[key]:null;if(result==='key'){return key;}else if(result==='value'){return val;}else{return{'key':key,'value':val};}}static last(item,result=null){item=this.convert(item);let key=Object.keys(item).splice(-1)[0];let val=result!=='key'?item[key]:null;if(result==='key'){return key;}else if(result==='value'){return val;}else{return{'key':key,'value':val};}}static n(item,n,result=null){let self=is.Helpers.Objects;let r=self.get(item,n,1);r=self.first(r);if(result==='key'){return r['key'];}else if(result==='value'){return r['value'];}else{return r;}}static refirst(item,data){let self=is.Helpers.Objects;let key=self.first(item,'key');item[key]=data;}static relast(item,data){let self=is.Helpers.Objects;let key=self.last(item,'key');item[key]=data;}static ren(item,i,data){let self=is.Helpers.Objects;let key=self.n(item,i,'key');item[key]=data;}static unfirst(item){let keys=Object.keys(item);let values=Object.values(item);keys.shift();values.shift();let result={};keys.forEach((key,i)=>result[key]=values[i]);return result;}static unlast(item){let keys=Object.keys(item);let values=Object.values(item);keys.pop();values.pop();let result={};keys.forEach((key,i)=>result[key]=values[i]);return result;}static unn(item,n,result=null){let self=is.Helpers.Objects;let r=self.cut(item,n,1);if(result==='key'){return self.keys(r);}else if(result==='value'){return self.values(r);}else{return r;}}static len(item){let system=is.Helpers.System;return system.typeData(item,'object')?Object.keys(item).length:Object.keys(this.convert(item)).length;}static levels(item,max=null){let system=is.Helpers.System;let self=is.Helpers.Objects;let n=0;if(system.typeOf(item,'iterable')){for(let k in item){let i=item[k];if(system.typeOf(i,'iterable')){let c=self.levels(i,max);n=(n>c)?n:c;}if(max&&n+1>=max){break;}}n=max&&n>=max?max:n+1;}return n;}static keys(item){return Object.keys(item);}static values(item){return Object.values(item);}static combine(values,keys=null){let self=is.Helpers.Objects;let system=is.Helpers.System;keys=self.convert(keys);keys=Object.values(keys);values=self.convert(values);values=Object.values(values);if(system.type(keys)!=='array'||!keys.length){return self.convert(values);}let lkeys=keys.length;let lvalues=values.length;if(lkeys>lvalues){keys=keys.slice(0,lkeys-1);}else if(lvalues>lkeys){values=values.slice(0,lvalues-1);}let result={};keys.forEach((key,i)=>result[key]=values[i]);return result;}static merge(item,merge,recursion=null){let system=is.Helpers.System;if(System.typeData(merge,'object')){let keys=Object.keys(merge);let values=Object.values(merge);for(let k in keys){let i=keys[k];item[i]=values[k];}}return $item;}static each(item,parameters=null,callback=null){let system=is.Helpers.System;let type=system.typeOf(parameters);if(type==='iterable'){for(let k in item){if(!item.hasOwnProperty(k))continue;if(system.type(k)==='numeric'){k=+k;}callback.call(k,item[k],k,parameters);}return parameters;}else if(!type){for(let k in item){if(!item.hasOwnProperty(k))continue;if(system.type(k)==='numeric'){k=+k;}item[k]=callback.call(k,item[k],k);}}else{for(let k in item){if(!item.hasOwnProperty(k))continue;if(system.type(k)==='numeric'){k=+k;}let i=callback.call(k,item[k],k);if(i===false){if(parameters==='filter'){delete item[k];}else if(parameters==='break'){break;}else if(parameters==='continue'){continue;}}else{item[k]=i;}}}return item;}static clear(item){let system=is.Helpers.System;var self=is.Helpers.Objects;if(!system.typeOf(item,'iterable')){return item;}item=self.each(item,'filter',function(i){if(system.typeOf(i,'iterable')){i=self.clear(i);}return!system.set(i)?false:i;});return item;}static unique(item){let system=is.Helpers.System;var self=is.Helpers.Objects;let arr=new Array();let len=item.length;for(let i=0; i<len; i++){if(arr.indexOf(item[i])=="-1"){arr.push(item[i]);}}return arr;}static filter(haystack,needle=null,notneedle=null){let find={};if(!needle&&!notneedle){return haystack;}for(let k in haystack){let i=haystack[k];if(needle&&i===needle){find[k]=i;}else if(notneedle&&i!==notneedle){find[k]=i;}}return find;}static sort(haystack,reverse=false,keys=false){let self=is.Helpers.Objects;let akeys=self.keys(haystack);let avalues=self.values(haystack);let associate=self.associate(haystack);let numeric=keys?!associate:self.numeric(haystack);let array=keys?akeys:avalues;if(numeric){array.sort((a,b)=>a-b);}else{let collator=new Intl.Collator(undefined,{numeric:true,sensitivity:'base'});array.sort(collator.compare);}if(reverse){array=self.values(self.reverse(array));}let result;if(associate){result={};if(keys){for(let k in array){let i=array[k];result[i]=haystack[i];}}else{let copy=Object.assign({},haystack);for(let k in array){let i=array[k];let x=self.find(copy,i,reverse?'r':null);result[x]=i;delete copy[x];}}}else{result={};for(let k in array){let i=array[k];if(keys){result[k]=haystack[i];}else{result[k]=i;}}}return result;}static randomize(haystack){let self=is.Helpers.Objects;let associate=self.associate(haystack);let result={};if(associate){let keys=self.keys(haystack);keys.sort(()=>Math.random()-0.5);for(let k in keys){let i=keys[k];result[i]=haystack[i];}}else{let values=self.values(haystack);values.sort(()=>Math.random()-0.5);for(let k in values){let i=values[k];result[k]=i;}}return result;}static difference(haystack,needle){var a=[],diff=[];for(var i=0; i<haystack.length; i++){a[haystack[i]]=true;}for(var i=0; i<needle.length; i++){if(a[needle[i]]){delete a[needle[i]];}else{a[needle[i]]=true;}}for(var k in a){diff.push(k);}return{...diff};}static level(haystack,needle,value=null){}static extract(haystack,needle){}static array_simple(item){let system=is.Helpers.System;var self=is.Helpers.Objects;if(!system.typeOf(item,'iterable')){return item;}self.each(item,false,function(i){if(system.typeOf(i,'iterable')){let v=Object.values(i);if(v.length===1){i=v[0];}}return i;});return item;}};is.Helpers.Parser=class{static fromString(item=null,parameters={'key':null,'clear':null,'simple':null}){var system=is.Helpers.System;var strings=is.Helpers.Strings;var self=is.Helpers.Objects;var key=system.set(parameters['key']);if(system.type(item)!=='string'){return item;}else if(item.indexOf(':')<0&&item.indexOf('|')<0){if(item.indexOf('!')===0){return null;}else{return key?{item:null}:{0:item};}}else{var split=strings.split(item,'|',true);if(key){split=self.each(split,{},function(i,k,r){if(!system.set(i)){return null;}else if(i.indexOf(':')<0){r[i]=null;}else{let spliti=strings.split(i,':',null);let splitk=spliti[0];delete spliti[0];if(splitk.indexOf('!')===0){return null;}if(!system.set(spliti)){r[splitk]=null;}else{r[splitk]=self.each(spliti,{},function(i,k,a){let result=i.indexOf('!')!==0?system.set(i,true):null;if(system.type(result)==='numeric'){result=+result;}if(!parameters['clear']||parameters['clear']&&result){a[k-1]=result;}});if(parameters['simple']){let v=Object.values(r[splitk]);if(v.length===1){r[splitk]=v[0];}}}return null;}});}else{split=self.each(split,false,function(i){if(!system.set(i)){return null;}else if(i.indexOf(':')<0){if(system.type(i)==='numeric'){i=+i;}return parameters['simple']?$i:{0:i};}else{let spliti=strings.split(i,':',null);let a=self.each(spliti,{},function(i,k,a){let result=i.indexOf('!')!==0?system.set(i,true):null;if(system.type(result)==='numeric'){result=+result;}if(!parameters['clear']||parameters['clear']&&result){a[k]=result;}});if(parameters['simple']){let v=Object.values(a);if(v.length===1){a=v[0];}}return a;}});if(parameters['simple']){let v=Object.values(split);if(v.length===1){split=self.first(split,'value');}}}return split;}}static toString(item,parameters={'key':null,'clear':null,'simple':null}){let system=is.Helpers.System;let self=is.Helpers.Objects;item=self.convert(item);let key=parameters['key']?true:null;let clear=parameters['clear']?true:null;let levels=self.levels(item,2);let str='';let first=self.first(item);item=self.unfirst(item);if(levels===1){if(clear){str+=key?first['key']+system.set(first['value'],':'):'';str+=system.set(first['value'],true);}else{str+=key?first['key']+':':'';str+=first['value'];}if(system.typeData(item,'object')){for(let k in item){let i=item[k];str+=key?'|'+k:'';str+=clear?system.set(i,':'+i):':'+i;}}}else{parameters['key']=null;str+=key?first['key']+':':'';str+=this.toString(first['value'],parameters);if(system.typeData(item,'object')){for(let k in item){let i=item[k];str+='|'+(key?k+(clear?system.set(i,':'):':'):'');str+=this.toString(i,parameters);}}}return str;}static fromJson(item,format=true){return JSON.parse(item);}static toJson(item,format=null){return JSON.stringify(item,false,format?'\t':null);}static prepare(data,up=null){for(let key in data){let item=data[key];}return data;}};is.Helpers.Sessions=class{static setCookie(name,set){document.cookie=encodeURIComponent(name)+"="+encodeURIComponent(set)+"; path=/";}static getCookie(name=null){let array={};document.cookie.split(";").forEach(function(item){let key;item.split("=").forEach(function(i,k){i=decodeURIComponent(i.trim());if(k===0){key=i;}else if((name&&key===name)||!name){array[key]=i;}});});return name?array[name]:array;}static unCookie(name){document.cookie=encodeURIComponent(name)+"=; path=/; max-age=0";}static setSession(name,set){localStorage[name]=set;}static getSession(name=null){return name?localStorage[name]:localStorage;}static unSession(name){delete localStorage[name];}};is.Helpers.Strings=class{static match(haystack,needle){return haystack.indexOf(needle)===-1?null:true;}static find(haystack,needle,position=null){let system=is.Helpers.System;let pos=system.set(position);if(pos&&position!=='r'){let len=needle.length;position=+position;if(position<0){position=haystack.length+position;}let result=haystack.substring(position,position+len);return result===needle?true:false;}else if(position==='r'){return haystack.lastIndexOf(needle);}else{return haystack.indexOf(needle);}}static get(haystack,index,length=null,position=null){let system=is.Helpers.System;index=+index;if(index<0){index=haystack.length+index;}if(length&&!position){length=+length;if(length<0){index+=length+1;length=index+Math.abs(length);}else{length=index+Math.abs(length);}return haystack.substring(index,length);}else if(length&&position){return haystack.substring(index,haystack.length-length);}else{return haystack.substring(index);}}static cut(haystack,index=-1,length=null,position=null){let len=haystack.length;if(!length){length=position?0:len;}let first=index<0?len+index:index;let last=first+(length<0?length+1:length);if(position){last=len-Math.abs(length);}if(first>last){let point=first+1;first=last;last=point;}if(first<0){first=0;}else if(first>len){first=len;}if(last<0){last=0;}else if(last>len){last=len;}return haystack.substring(0,first)+haystack.substring(last);}static add(haystack,needle,reverse=null){return reverse?''+needle+haystack:''+haystack+needle;}static reverse(item){return item.split("").reverse().join("");}static first(item){return item[0];}static last(item){return item.substring(item.length-1);}static len(item){let system=is.Helpers.System;let type=system.type(item);return type&&type!=='array'&&type!=='object'?item.length:null;}static split(item=null,splitter='\s,;',clear=null){let system=is.Helpers.System;var data=is.Helpers.Objects;if(system.type(item)!=='string'){return null;}else if(system.type(splitter)!=='string'){return item;}item=item.split(new RegExp('['+splitter+']','u'));item={...item};if(system.set(clear)){item=data.clear(item);}return item;}static join(item,splitter=' '){let type=is.Helpers.System.type(item);if(type!=='array'&&type!=='object'){return item;}if(type==='object'){item=Object.values(item);}return item.join(splitter);}static replace(item,search,replace){let system=is.Helpers.System;if(system.type(search)==='string'){return item.replaceAll(search,replace);}else if(system.type(search)==='array'){let t=system.type(replace)==='array';search.forEach(function(i,k){item=item.replaceAll(i,t?replace[k]:replace);});return item;}}static clear(item){return item.replace(/(\s|\r|\n|\r\n)+/g,'');}static unique(item){item=item.split(new RegExp('','u'));let str='';let len=item.length;for(let i=0; i<len; i++){if(!this.match(str,item[i])){str+=item[i];}}return str;}static sort(haystack,reverse=false,register=true){let objects=is.Helpers.Objects;let str='';haystack=haystack.split(new RegExp('','u'));if(register){haystack.sort();}else{let collator=new Intl.Collator(undefined,{numeric:true,sensitivity:'base'});haystack.sort(collator.compare);}if(reverse){haystack=objects.values(objects.reverse(haystack));}for(let k in haystack){let i=haystack[k];str+=i;}return str;}static difference(haystack,needle){let a=[],diff='';for(let i=0; i<haystack.length; i++){a[haystack[i]]=true;}for(let i=0; i<needle.length; i++){if(a[needle[i]]){delete a[needle[i]];}else{a[needle[i]]=true;}}for(let k in a){diff+=k;}return diff;}};is.Helpers.System=class{static print(item=null){console.log(item===null?'null':item);}static console(item=null,title=null){if(title){console.log('//'+title);}console.log(item===null?'null':item);}static include(src){src=src.replace(/(\.\.)|(\/)|(\\)|(\.)+/g,'');src=src.replaceAll(':','/');var s=document.createElement('script');s.src='http://'+window.location.host+'/vendor/isengine/framework/js/'+src+'.js';s.async=false;s.type='text/javascript';s.onload=arguments[1]||null;s.onreadystatechange=function(){if(this.readyState=='complete'&&typeof(this.onload)=='function'){this.onload();}};document.getElementsByTagName('head')[0].appendChild(s);return s;}static isset(item=null){return typeof(item)!="undefined"&&item!==null;}static set(item=null,yes=null,no=''){if(yes){return this.set(item)?(yes===true?item:yes):no;}let type=typeof item;if(type==='undefined'||item===false||item===null||item==='false'||item==='null'||item===''||Number.isNaN(item)){return null;}else if(type==='boolean'&&item===true){return true;}else if(type==='object'||type==='array'){if(type==='object'){item=Object.values(item);}if(Array.isArray(item)&&item.length!==0){return item.filter(function(e){return e===0||e}).length>0?true:null;}else{return null;}}else if(type==='string'&&(item.indexOf(' ')>-1||item.indexOf(' ')>-1)){return item.replace(/[\s]+/g,'')?true:null;}return true;}static type(item=null,compare=null){let type=null;let data=null;let set=this.set(item);if(Array.isArray(item)){type='array';}else if(typeof item==='object'&&item){type='object';}else if(!set){type=null;}else if(Number.isNaN(item)){type=null;}else if(typeof item==='boolean'){type='true';}else if(typeof item==='string'){item=item.replace(/\s/g,'');item=item.replace(/\,/g,'.');set=this.set(item);if(!set){type=null;}else if(!isNaN(item)){type='numeric';}else{type=typeof item;}}else if(!isNaN(item)){type='numeric';}else{type=typeof item;}if(compare){return compare===type?true:null;}return type;}static typeOf(item=null,compare=null){let set=this.set(item);let type=null;let itype=typeof item;if(itype==='string'||itype==='numeric'){type='scalar';}else if(itype==='array'||itype==='object'){type='iterable';}else if(!set||item===true){return null;}if(compare){return compare===type?true:null;}return type;}static typeData(item=null,compare=null){let type=this.type(item);let result=null;if(type==='string'){let first=item[0];let last=item.substring(item.length-1);if((first==='{'&&last==='}')||(first==='['&&last===']')){result='json';}else if(item.indexOf(':')>-1||item.indexOf('|')>-1){result='string';}}else if(type==='array'){result='array';}else if(type==='object'){let fl=Object.getOwnPropertyNames(item).filter((key)=>typeof item[key]==='function').length;let kl=Object.keys(item).length;if(fl==0&&kl>0){result='object';}}if(compare){return compare===type?true:null;}return type;}static refresh(path='/',code=null,data=null){Location.replace(path);}static code(code=200){}};is.View.Elements=class{constructor(){this.clear();}clear(){this.items={};this._data={};this._name=undefined;this._items=undefined;}launch(name=null,selector=null){this.clear();if(name===null){let items={};$("[is-name]").each(function(i){let name=$(this).attr("is-name");if(!items[name]){items[name]=new is.View.Elements();items[name].launch(name);}});this.items=items;return;}if(selector===null){this._items=$("[is-name=\""+name+"\"]");this._name=name;}else if(typeof(selector)==="object"){this._items=$(selector);this._name=$(selector).attr("is-name");}else{$(selector).attr("is-name",name);this._name=$(selector);this._name=name;}let data={};this._items.each(function(){if($(this).is("[is-data]")){let name=$(this).attr("is-data");let separator=name.indexOf(":");data[name]=separator&&separator>0?$(this).attr(name.substring(separator+1)):$(this).html().trim();}$(this).find("[is-data]").each(function(){let name=$(this).attr("is-data");let separator=name.indexOf(":");data[name]=separator&&separator>0?$(this).attr(name.substring(separator+1)):$(this).html().trim();});if($(this).is("[is-data-from]")){$.each(this.attributes,function(index,attribute){if(attribute.name.indexOf("data-")===0){let name=attribute.name.substr(5);data[name]=attribute.value;}});}$(this).find("[is-data-from]").each(function(){$.each(this.attributes,function(index,attribute){if(attribute.name.indexOf("data-")===0){let name=attribute.name.substr(5);data[name]=attribute.value;}});});});this._data=data;}fill(object){this.clear();let items={};$.each(object,function(k,i){if(!items[k]){items[k]=new is.View.Elements();items[k]._data=i;items[k]._name=k;items[k]._items=undefined;}});this.items=items;}name(){return this._name;}data(name=null,value=null){if(value!==null){if(name!==null){this._data[name]=value;this.refresh(name);}}else{if(name===null){return this._data;}return this._data[name];}}value(name,callback){let current=this._data[name];let result=callback.call(this,current);this._data[name]=result;this.refresh(name);}action(name,type,callback){let selector="[is-name=\""+this.name()+"\"] [is-action=\""+name+"\"]";$("body").on(type,selector,callback);}refresh(name=null,obj=this){if(name===null){let parents=this;Object.entries(this._data).forEach(function(i){parents.refresh(i[0],parents);});return;}let value=obj.data(name);let selector="[is-data=\""+name+"\"]";obj._items.each(function(){$(this).find(selector).each(function(){let separator=name.indexOf(":");if(separator&&separator>0){let a=name.substring(separator+1);$(this).attr(a,value);if(a==="value"){$(this).val(value);}else if(a.indexOf("data-")===0){$(this).data(a.substring(5),value);}}else{$(this).html(value);}});});}clone(name,from,to=null,method=null){let n=new is.View.Elements();n.launch(name,$(from).first().clone());n._items.attr("is-name",name);n._data=this._data;n.refresh();let items=this._items;n._items.each(function(){items.push(this);});if(to===null){return n._items;}if(method==="prepend"){n._items.prependTo($(to));}else{n._items.appendTo($(to));}}};is.View.Globals=class{constructor(){this._data={};var t=this;$("[is-key]").each(function(){t.value(this);});$("body").on("change","[is-key]",function(){t.value(this);});}data(name=null,value=null){}set(map,value){if(map.indexOf(':')<0){this._data[map]=value;return;}var arrmap=map.split(':');var len=Object.keys(arrmap).length;var i=0;var data=this._data;while(len>0){data[ arrmap[i] ]=len>1?{}:value;data=data[ arrmap[i] ];i++;len--;}}get(map){if(map.indexOf(':')<0){return this._data[map];}var arrmap=map.split(':');var len=Object.keys(arrmap).length;var i=0;var data=this._data;while(len>0){data=data[ arrmap[i] ];i++;len--;}return data;}value(target){var e=$(target);var type=e.attr('is-value-type');var key=e.attr('is-key');if(key===undefined){key=Object.keys(this._data).length;}var val;var vfrom=e.attr('is-value-from');var vdata=e.attr('is-value-data');if(e.attr('is-value-get')!==undefined){val=e.val();}else if(vdata!==undefined){val=e.data(vdata);}else if(vfrom!==undefined){val=e.attr(vfrom);}else{val=e.attr('is-value');}if(type==='numeric'){val=parseFloat(val);}else if(type==='string'){val=""+val;}this.set(key,val);}};